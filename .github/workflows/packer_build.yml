# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI to build AMI

env:
  ARTIFACT_NAME: csye6225-web-${{ github.sha }}.zip
  CODEDEPLOY_APPLICATION_NAME: mywebapp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: wood-WebappDeploymentGroup-1EV8VYYWH235A
  AWS_REGION: us-west-2

on:
  pull_request:
    branches: [main]
    types: [closed]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  packer_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.3
      - name: build with maven
        run: mvn -B package --file pom.xml
      - name: package
        run: mvn package
      - name: check file
        run: ls -al target
      # - name: Build ami
      #   run: PACKER_LOG=1 packer build ami.json
      - name: Build Deployment Artifact
        run: |
          mkdir codedeploy_artifact
          zip -r ${{ env.ARTIFACT_NAME }} target/webservice-0.0.1-SNAPSHOT.jar codedeploy/*.sh appspec.yml
          pwd
          ls -al
          mv ${{ env.ARTIFACT_NAME }} codedeploy_artifact
          ls -al
          pwd
          cd codedeploy_artifact
          pwd
          ls -al
          cd ..
          pwd
          ls -al
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIAYLSEFMVHMNT2QMFH
          aws-secret-access-key: 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
          aws-region: ${{ env.AWS_REGION }}
      - name: Copy Artifact to S3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_CODEDEPLOY_BUCKET }}
      - name: CodeDeploy API call
        run: |
          output=$(aws deploy create-deployment \
            --application-name ${{env.CODEDEPLOY_APPLICATION_NAME}} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME}} \
            --description "CSYE6225 - CodeDeploy" \
            --s3-location bucket=${{ secrets.S3_CODEDEPLOY_BUCKET }},bundleType=zip,key=${{ env.ARTIFACT_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --output json)

            echo $output

            dId=$(echo $output | jq -r '.deploymentId')

            aws deploy wait deployment-successful --deployment-id $dId
